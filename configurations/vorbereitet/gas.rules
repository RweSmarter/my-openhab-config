import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
import org.joda.time.*
import java.lang.Math

//3398.3 Zähler
//112833
var Number startGasZaehlerWert = 2269.97

var DateTime letzteGasAblesungDatum = parse("2014-09-26")
var Number letzteGasAblesungWert = 20665
var Number letzteGasAblesungJahresverbrauch = 21000

rule "Last daily consumption"
when
     Time cron "0 59 23 * * ?"
then

  postUpdate(Gas_Last_Daily_Consumption, (Gas_Current_Count.state as DecimalType) - (Gas_Current_Count.historicState(now.toDateMidnight).state as DecimalType) )
end

rule "Gas consumption"
when
     Time cron "0 */5 * * * ?"
then

  if( Gas_Pulse_Counter.state != Uninitialized ){

    var Number Aktuell_End = Gas_Pulse_Counter.state as DecimalType

    /* Aktueller Verbrauch */
    var Number Start_5Min = Gas_Pulse_Counter.historicState(now.minusMinutes(5)).state as DecimalType
    var Number Aktuell_5Min = (Aktuell_End - Start_5Min) * 0.01
    if( Aktuell_5Min < 0 ) Aktuell_5Min = 0;

    if( Gas_Current_Consumption.state == Uninitialized || Gas_Current_Consumption.state != Aktuell_5Min ){

      postUpdate(Gas_Current_Consumption, Aktuell_5Min )
    }

    var zaehlerStand = startGasZaehlerWert + (Aktuell_End * 0.01)
    if( zaehlerStand != Gas_Current_Count.state ){

      postUpdate( Gas_Current_Count, zaehlerStand )
    }

    // Jahresverbrauch
    var jahresVerbrauch = zaehlerStand - letzteGasAblesungWert
    if( jahresVerbrauch != Gas_Annual_Consumption.state ){

      postUpdate( Gas_Annual_Consumption, jahresVerbrauch )

      // Hochrechnung
      var Number aktuellesJahrMillis = now.getMillis - letzteGasAblesungDatum.getMillis
      var Number ganzesJahrMillis = 31536000000l
      var hochrechnungVerbrauch = Math::round((ganzesJahrMillis * jahresVerbrauch / aktuellesJahrMillis).doubleValue)
      postUpdate( Gas_Forecast, hochrechnungVerbrauch + " m³, " + letzteGasAblesungJahresverbrauch + " m³" )
    }

    // Aktueller Tagesverbrauch
    var Number Start = Gas_Pulse_Counter.historicState(now.toDateMidnight).state as DecimalType
    var Number Aktuell = (Aktuell_End - Start) * 0.01
    if( Aktuell < 0 ) Aktuell = 0;

    if( Gas_Current_Daily_Consumption.state == Uninitialized || Gas_Current_Daily_Consumption.state != Aktuell ){

      postUpdate(Gas_Current_Daily_Consumption, Aktuell )
    }
  }
end

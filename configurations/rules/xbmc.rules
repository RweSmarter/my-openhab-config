import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*
import java.util.Date

// var Number brightnessBeforePause

rule "Lights on when paused"
when
        Item UG_Hannes_XBMC_State changed from Play to Pause
then
        var Date sunsetTime = (Sunset_Time.state as DateTimeType).calendar.time
        var Date sunriseTime = (Sunrise_Time.state as DateTimeType).calendar.time
        if( now.toDate().after(sunsetTime) || now.toDate().before(sunriseTime)){
/*                brightnessBeforePause = LivingRoom_Lamp.state as DecimalType
                if ( brightnessBeforePause < 50){
                        sendCommand( LivingRoom_Lamp, "50")
                }
*/
          sendCommand( UG_Hannes_Power_Lamp, ON )
        }

end

rule "Lights off when pause end"
when
        Item UG_Hannes_XBMC_State changed from Pause to Play
then
 /*       if (LivingRoom_Lamp.state == 50){
                sendCommand( LivingRoom_Lamp, brightnessBeforePause)
        } */
        sendCommand( UG_Hannes_Power_Lamp, OFF )
end

rule "Lights off when screensaver activates"
when
    Item UG_Hannes_XBMC_Screensaver changed
then
    if(UG_Hannes_XBMC_Screensaver.state == ON)
    {
        logInfo("screensaver", "turn lamp OFF")
        sendCommand(UG_Hannes_Power_Lamp,OFF)
//            } else{
//        logInfo("screensaver", "turn lamp ON")
//        sendCommand(UG_Hannes_Power_Lamp,ON)
    }
end

// XBMC Kueche Radio
rule "Start Radio"
when
    Item EG_Kueche_XBMC_Radio changed to ON
then
    postUpdate(EG_Kueche_XBMC_Radio, OFF)
    sendCommand(EG_Kueche_XBMC_OpenMedia, "http://mp3stream1.apasf.apa.at:8000")
end

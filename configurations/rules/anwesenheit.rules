import org.openhab.core.library.types.*
import org.openhab.core.persistence.*
import org.openhab.model.script.actions.*

rule "Hannes verlaesst das Haus"
when
	Item Presence_Hannes_Home changed from ON to OFF
then
	logInfo("PresenceCheck", "Hannes verlaesst das Haus.")
	JemandDa.sendCommand(OFF)
	pushover("Viel Spass unterwegs, Hannes.")
end

rule "Hannes kommt nach Hause"
when
	Item Presence_Hannes_Home changed from OFF to ON 
then
	logInfo("PresenceCheck", "Hannes kommt nach Hause.")
	JemandDa.sendCommand(ON)
	pushover("Willkommen zu Hause, Hannes.")
end

rule "Hannes im Office"
when
	Item Presence_Hannes_Office changed from OFF to ON 
then
	logInfo("PresenceCheck", "Hannes ist im Bureau.")
	pushover("Du bist nun im Bureau. Vergiss nicht BMD zu buchen!")
end

rule "Hannes verlaesst KiGa"
when
	Item Presence_Hannes_Office changed from ON to OFF 
then
	logInfo("PresenceCheck", "Hannes verlaesst nun das Bureau.")
	pushover("Du verlaesst nun das Bureau. Vergiss nicht BMD zu buchen!")
end
 
rule "MqttPostionParseHannes"
  when
    Item mqtt_Hannes_Position_Raw changed
  then
    var String json = (mqtt_Hannes_Position_Raw.state as StringType).toString
    // {"_type": "location", "lat": "47.5010314", "lon": "8.3444293",
    //    "tst": "1422616466", "acc": "21.05", "batt": "40"}
    var String type = transform("JSONPATH", "$._type", json)
    if (type == "location") {
      var String lat  = transform("JSONPATH", "$.lat", json)
      var String lon  = transform("JSONPATH", "$.lon", json)
      var String acc  = transform("JSONPATH", "$.acc", json)
      var String batt = transform("JSONPATH", "$.batt", json)

      sendCommand(mqtt_Hannes_Latitude,  lat)
      sendCommand(mqtt_Hannes_Longitude, lon)
      sendCommand(mqtt_Hannes_Accuracy,   acc)
      sendCommand(mqtt_Hannes_Battery,  batt)
    }
  end
